require 'pry'
require './night_writer.rb'

class Translator < NightWriter

  attr_accessor :contents
                :contents_array

  def initialize
    # @num_key = {
    #   '#' => [".0", ".0", "00"],
    #   "0" => [".0", "00", ".."],
    #   "1" => ["0.", "..", ".."],
    #   "2" => ["0.", "0.", ".."],
    #   "3" => ["00", "..", ".."],
    #   "4" => ["00", ".0", ".."],
    #   "5" => ["0.", ".0", ".."],
    #   "6" => ["00", "0.", ".."],
    #   "7" => ["00", "00", ".."],
    #   "8" => ["0.", "00", ".."],
    #   "9" => [".0", "0.", ".."]
    # }
    # @char_key = { 
    #   "a" => ["0.", "..", ".."], 
    #   "b" => ["0.", "0.", ".."],
    #   "c" => ["00", "..", ".."],
    #   "d" => ["0.", ".0", ".."],
    #   "e" => ["0.", ".0", ".."],
    #   "f" => ["00", "0.", ".."],
    #   "g" => ["00", "00", ".."],
    #   "h" => ["0.", "00", ".."],
    #   "i" => [".0", "0.", ".."],
    #   "j" => [".0", "00", ".."],
    #   "k" => ["0.", "..", "0."],
    #   "l" => ["0.", "0.", "0."],
    #   "m" => ["00", "..", "0."],
    #   "n" => ["00", ".0", "0."],
    #   "o" => ["0.", ".0", "0."],
    #   "p" => ["00", "0.", "0."],
    #   "q" => ["00", "00", "0."],
    #   "r" => ["0.", "00", "0."],
    #   "s" => [".0", "0.", "0."],
    #   "t" => [".0", "00", "0."],
    #   "u" => ["0.", "..", "00"],
    #   "v" => ["0.", "0.", "00"],
    #   "w" => [".0", "00", ".0"],
    #   "x" => ["00", "..", "00"],
    #   "y" => ["00", ".0", "00"],
    #   "z" => ["0.", ".0", "00"],
    #   "!" => ["..", "00", "0."],
    #   "'" => ["..", "..", "0."],
    #   "," => ["..", "0.", ".."],
    #   "-" => ["..", "..", "00"],
    #   "." => ["..", "00", ".0"],
    #   "?" => ["..", "0.", "00"],
    #   " " => [" ", " ", " "],
    # }

     @char_key_l1 = { 
    "A" => ["..0."],
    "B" => ["..0."],
    "C" => ["..00"],
    "D" => ["..0."],
    "E" => ["..0."],
    "F" => ["..00"],
    "G" => ["..00"],
    "H" => ["..0."],
    "I" => ["...0"],
    "J" => ["...0"],
    "K" => ["..0."],
    "L" => ["..0."],
    "M" => ["..00"],
    "N" => ["..00"],
    "O" => ["..0."],
    "P" => ["..00"],
    "Q" => ["..00"],
    "R" => ["..0."],
    "S" => ["...0"],
    "T" => ["...0"],
    "U" => ["..0."],
    "V" => ["..0."],
    "W" => ["...0"],
    "X" => ["..00"],
    "Y" => ["..00"],
    "Z" => ["..0."],
    "a" => ["0."], 
    "b" => ["0."],
    "c" => ["00"],
    "d" => ["0."],
    "e" => ["0."],
    "f" => ["00"],
    "g" => ["00"],
    "h" => ["0."],
    "i" => [".0"],
    "j" => [".0"],
    "k" => ["0."],
    "l" => ["0."],
    "m" => ["00"],
    "n" => ["00"],
    "o" => ["0."], 
    "p" => ["00"],
    "q" => ["00"],
    "r" => ["0."],
    "s" => [".0"],
    "t" => [".0"],
    "u" => ["0."],
    "v" => ["0."],
    "w" => [".0"],
    "x" => ["00"],
    "y" => ["00"],
    "z" => ["0."],
    "!" => [".."],
    "'" => [".."],
    "," => [".."],
    "-" => [".."],
    "." => [".."],
    "?" => [".."],
    " " => [" ",],
  }

  @char_key_l2 = { 
    "A" => ["...."],
    "B" => ["...."],
    "C" => ["...."],
    "D" => ["...."],
    "E" => ["...."],
    "F" => ["...."],
    "G" => ["...."],
    "H" => ["...."],
    "I" => ["...."],
    "J" => ["...."],
    "K" => ["...."],
    "L" => ["...."],
    "M" => ["...."],
    "N" => ["...."],
    "O" => ["...."],
    "P" => ["...."],
    "Q" => ["...."],
    "R" => ["...."],
    "S" => ["...."],
    "T" => ["...."],
    "U" => ["...."],
    "V" => ["...."],
    "W" => ["...."],
    "X" => ["...."],
    "Y" => ["...."],
    "Z" => ["...."],
    "a" => [".."], 
    "b" => ["0."],
    "c" => [".."],
    "d" => [".0"],
    "e" => [".0"],
    "f" => ["0."],
    "g" => ["00"],
    "h" => ["00"],
    "i" => ["0."],
    "j" => ["00"],
    "k" => [".."],
    "l" => ["0."],
    "m" => [".."],
    "n" => [".0"],
    "o" => [".0"],
    "p" => ["0."],
    "q" => ["00"],
    "r" => ["00"],
    "s" => ["0."],
    "t" => ["00"],
    "u" => [".."],
    "v" => ["0."],
    "w" => ["00"],
    "x" => [".."],
    "y" => [".0"],
    "z" => [".0"],
    "!" => ["00"],
    "'" => [".."],
    "," => ["0."],
    "-" => [".."],
    "." => ["00"],
    "?" => ["0."],
    " " => [" "],
  }

  @char_key_l3 = {
    "A" => ["...0"],
    "B" => ["...0"],
    "C" => ["...0"],
    "D" => ["...0"],
    "E" => ["...0"],
    "F" => ["...0"],
    "G" => ["...0"],
    "H" => ["...0"],
    "I" => ["...0"],
    "J" => ["...0"],
    "K" => ["...0"],
    "L" => ["...0"],
    "M" => ["...0"],
    "N" => ["...0"],
    "O" => ["...0"],
    "P" => ["...0"],
    "Q" => ["...0"],
    "R" => ["...0"],
    "S" => ["...0"],
    "T" => ["...0"],
    "U" => ["...0"],
    "V" => ["...0"],
    "W" => ["...0"],
    "X" => ["...0"],
    "Y" => ["...0"],
    "Z" => ["...0"], 
    "a" => [".."], 
    "b" => [".."],
    "c" => [".."],
    "d" => [".."],
    "e" => [".."],
    "f" => [".."],
    "g" => [".."],
    "h" => [".."],
    "i" => [".."],
    "j" => [".."],
    "k" => ["0."],
    "l" => ["0."],
    "m" => ["0."],
    "n" => ["0."],
    "o" => ["0."],
    "p" => ["0."],
    "q" => ["0."],
    "r" => ["0."],
    "s" => ["0."],
    "t" => ["0."],
    "u" => ["00"],
    "v" => ["00"],
    "w" => [".0"],
    "x" => ["00"],
    "y" => ["00"],
    "z" => ["00"],
    "!" => ["0."],
    "'" => ["0."],
    "," => [".."],
    "-" => ["00"],
    "." => [".0"],
    "?" => ["00"],
    " " => [" "],
  }
  end                   

  def translate_text_to_braille_l1
    @@contents.chomp.each_char do |i| #for each individual character in text sample....
      @l1_transform = @char_key_l1.fetch(i)
      print "#{@l1_transform.join}"
    end 
    print "\n"
  end

  def translate_text_to_braille_l2
    @@contents.chomp.each_char do |i|
      @l2_transform = @char_key_l2.fetch(i)
      print "#{@l2_transform.join}"
    end
    print "\n" 
  end

  def translate_text_to_braille_l3
    @@contents.chomp.each_char do |i|
      @l3_transform = @char_key_l3.fetch(i)
      print "#{@l3_transform.join}"
    end 
    print "\n"
  end

  # def split_string_at_80_characters
  #   #subdivides string into 80 character segments within array
  #   @contents_array = @transform.scan(/.{1,80}/)
  # end     

end

translator = Translator.new
#translator.split_string_at_80_characters
translator.translate_text_to_braille_l1
translator.translate_text_to_braille_l2
translator.translate_text_to_braille_l3


